from OpenGL.GL import *
from OpenGL.GLUT import *
from OpenGL.GLU import *
from numpy import *

def draw1():
    glClearColor(1, 1, 1, 1)
    glClear(GL_COLOR_BUFFER_BIT)
    glColor(0.587654 , 0.365, 0)
    glBegin(GL_POLYGON)
    glVertex2d(-0.4, -0.4)
    glVertex2d( 0.4, -0.4)
    glVertex2d( 0.4, 0.4)
    glVertex2d(-0.4, 0.4)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_POLYGON)
    glVertex2d(-0.4, -0.2)
    glVertex2d(-0.6, -0.2)
    glVertex2d(-0.6, -0.6)
    glVertex2d(-0.4, -0.6)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_POLYGON)
    glVertex2d(0.4, -0.2)
    glVertex2d(0.6, -0.2)
    glVertex2d(0.6, -0.6)
    glVertex2d(0.4, -0.6)
    glEnd()
    glColor(0, 0.8765,1.8765432)
    glBegin(GL_LINES)
    glVertex2d(-0.4, -0.3)
    glVertex2d(-0.6, -0.3)
    glEnd()
    glBegin(GL_LINES)
    glVertex2d(-0.4, -0.4)
    glVertex2d(-0.6, -0.4)
    glEnd()
    glBegin(GL_LINES)
    glVertex2d(-0.4, -0.5)
    glVertex2d(-0.6, -0.5)
    glEnd()
    glBegin(GL_LINES)
    glVertex2d(0.4, -0.5)
    glVertex2d(0.6, -0.5)
    glEnd()
    glBegin(GL_LINES)
    glVertex2d(0.4, -0.4)
    glVertex2d(0.6, -0.4)
    glEnd()
    glBegin(GL_LINES)
    glVertex2d(0.4, -0.3)
    glVertex2d(0.6, -0.3)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_LINES)
    glVertex2d(-0.3, -0.4)
    glVertex2d(-0.3, -0.47)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_LINES)
    glVertex2d(-0.25, -0.4)
    glVertex2d(-0.25, -0.5)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_LINES)
    glVertex2d(-0.3, -0.47)
    glVertex2d(-0.4, -0.5)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_LINES)
    glVertex2d(-0.25, -0.5)
    glVertex2d(-0.4, -0.55)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_LINES)
    glVertex2d(0.3, -0.4)
    glVertex2d(0.3, -0.47)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_LINES)
    glVertex2d(0.25, -0.4)
    glVertex2d(0.25, -0.5)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_LINES)
    glVertex2d(0.3, -0.47)
    glVertex2d(0.4, -0.5)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_LINES)
    glVertex2d(0.25, -0.5)
    glVertex2d(0.4, -0.55)
    glEnd()

    glBegin(GL_POLYGON)
    r = 0.2
    glColor(0, 0, 0)
    for theta in arange(0, 2 * pi, 0.01):
        x1 = r * cos(theta)+0.2
        y1 = r * sin(theta) + 0.8
        glVertex2d(x1, y1)
    glEnd()
    glBegin(GL_POLYGON)
    r = 0.05
    glColor(0, 0.8765, 1.8765432)
    for theta in arange(0, 2 * pi, 0.01):
        x1 = r * cos(theta) + 0.15
        y1 = r * sin(theta) + 0.79
        glVertex2d(x1, y1)
    glEnd()
    glBegin(GL_POLYGON)
    r = 0.2
    glColor(0, 0, 0)
    for theta in arange(0, 2 * pi, 0.01):
        x1 = r * cos(theta) + -0.2
        y1 = r * sin(theta) + 0.8
        glVertex2d(x1, y1)
    glEnd()
    glBegin(GL_POLYGON)
    r = 0.05
    glColor(0, 0.8765, 1.8765432)
    for theta in arange(0, 2 * pi, 0.01):
        x1 = r * cos(theta) + -0.15
        y1 = r * sin(theta) + 0.79
        glVertex2d(x1, y1)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_POLYGON)
    glVertex2d(0.1, 0.4)
    glVertex2d(0.1, 0.5)
    glVertex2d(-0.1, 0.5)
    glVertex2d(-0.1, 0.4)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_POLYGON)
    glVertex2d(0.05, 0.5)
    glVertex2d(0.05, 0.67)
    glVertex2d(-0.05, 0.67)
    glVertex2d(-0.05, 0.5)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_LINES)
    glVertex2d(0.05, 0.56)
    glVertex2d(0.2, 0.7)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_LINES)
    glVertex2d(-0.05, 0.56)
    glVertex2d(-0.2, 0.7)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_POLYGON)
    glVertex2d(0.4, 0.35)
    glVertex2d(0.55, 0.35)
    glVertex2d(0.55, 0.2)
    glVertex2d(0.4, 0.2)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_POLYGON)
    glVertex2d(-0.4, 0.35)
    glVertex2d(-0.55, 0.35)
    glVertex2d(-0.55, 0.2)
    glVertex2d(-0.4, 0.2)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_LINES)


    glVertex2d(-0.05, 0.56)
    glVertex2d(-0.2, 0.7)
    glEnd()

    glColor(0, 0, 0)
    glBegin(GL_LINES)
    glVertex2d(.2, -0.1)
    glVertex2d(.2, 0.2)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_LINES)
    glVertex2d(.2, -0.1)
    glVertex2d(0, 0.15)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_LINES)
    glVertex2d(0, 0.15)
    glVertex2d(-0.2, -0.1)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_LINES)
    glVertex2d(-.2, -0.1)
    glVertex2d(-.2, 0.2)
    glEnd()
    glColor(0.587654, 0.365, 0)
    glBegin(GL_POLYGON)
    glVertex2d(0.55, 0.35)
    glVertex2d(0.55, 0.2)
    glVertex2d(0.7, 0.1)
    glVertex2d(0.78, 0.15)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_POLYGON)
    glVertex2d(0.7, 0.1)
    glVertex2d(0.78, 0.15)
    glVertex2d(0.79, 0.05)
    glVertex2d(0.7, 0.05)

    glEnd()
    glColor (0.587654,0.365, 0)
    glBegin(GL_POLYGON)
    glVertex2d(0.7, 0.15)
    glVertex2d(0.79, 0.05)
    glVertex2d(0.79, -0.1)
    glVertex2d(0.7, -0.1)
    glEnd()
    glColor(0.587654, 0.365, 0)
    glBegin(GL_POLYGON)
    glVertex2d(-0.55, 0.35)
    glVertex2d(-0.55, 0.2)
    glVertex2d(-0.7, 0.1)
    glVertex2d(-0.78, 0.15)
    glEnd()
    glColor(0, 0, 0)
    glBegin(GL_POLYGON)
    glVertex2d(-0.7, 0.1)
    glVertex2d(-0.78, 0.15)
    glVertex2d(-0.79, 0.05)
    glVertex2d(-0.7, 0.05)

    glEnd()
    glColor(0.587654, 0.365, 0)
    glBegin(GL_POLYGON)
    glVertex2d(-0.7, 0.15)
    glVertex2d(-0.79, 0.05)
    glVertex2d(-0.79, -0.1)
    glVertex2d(-0.7, -0.1)
    glEnd()
    glBegin(GL_POLYGON)
    r = 0.04
    glColor(0, 0, 0)
    for theta in arange(0, 2 * pi, 0.01):
        x1 = r * cos(theta) + 0.3
        y1 = r * sin(theta) + 0.3
        glVertex2d(x1, y1)
    glEnd()
    glBegin(GL_POLYGON)
    r = 0.04
    glColor(0, 0, 0)
    for theta in arange(0, 2 * pi, 0.01):
        x1 = r * cos(theta) + -0.3
        y1 = r * sin(theta) + 0.3
        glVertex2d(x1, y1)
    glEnd()



    glFlush()

glutInit()
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
glutCreateWindow(b"WALL")
glutInitWindowSize(50, 50)   # Set the window's initial width & height
glutDisplayFunc(draw1)
glutMainLoop()

